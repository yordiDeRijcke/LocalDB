@using LocalDB.Core.Domain
@model IEnumerable<Item>
@{
    ViewData["Title"] = "Items";
}

<!-- Page Content -->
<div class="container">
    <div class="row" id="menu-div">
        <button class= "btn btn-default hideButtons" id="saveChangesBtn">Save Changes</button>
        <button class="btn btn-default hideButtons" id="viewChangesBtn">View Changes</button>
    </div>
    <div class="row">

        <div class="col-md-3">
            <p class="lead">Select Category</p>
            <div class="list-group">
                <a href="#" class="list-group-item">Category 1</a>
                <a href="#" class="list-group-item">Category 2</a>
                <a href="#" class="list-group-item">Category 3</a>
            </div>
        </div>

        <div class="col-md-9">
            <div class="row">
                @foreach (Item item in Model)
                {
                    <div class="col-sm-4 col-lg-4 col-md-4">
                        <div class="thumbnail">
                            <a asp-action="Details" asp-route-id="@item.ItemId">
                                <img src="~/images/testImage.png" alt="Product Image">
                                <div class="caption">
                                    <h4>@item.Name</h4>
                                    <p class="hidden-xs hidden-sm">@item.Description</p>
                                    <p class="visible-xs visible-sm">In stock:@item.Stock</p>
                                </div>
                            </a>
                            <div class="stock input-group">
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default btn-min" id="@(item.ItemId)-min">
                                        <span class="glyphicon glyphicon-minus"></span>
                                    </button>
                                </span>
                                <input type="number" class="form-control input-stock" id="@item.ItemId-stock" value="@item.Stock">
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default btn-plus" id="@(item.ItemId)-plus">
                                        <span class="glyphicon glyphicon-plus"></span>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let allItems = @(Json.Serialize(Model));
    </script>

    <script>
    function saveChanges(e) {
        // Convert changedItems Map to [Object]
        let changedItemsArray= [];

        changedItems.forEach((value, key) => {
            changedItemsArray.push({itemId: key, stock: value});
        });

        $.post('@Url.Action("UpdateStock")', { changedItems: changedItemsArray },
        function () {
            $('#result').html('"UpdateStock()" successfully called.');
            });
        window.location.reload();
    }
    </script>
}